/*
	global functions
    helper functions to be used by SASS styles
*/

//  replace characters in a string
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// replace a given RGB fill colour with another
@function replace-svg-fill($svg, $fill-to-replace, $new-fill) {
    $new-fill-string: str-replace(inspect($new-fill), '#', '%23');
    @return str-replace($svg, $fill-to-replace, $new-fill-string);
}

// convert given HEX value to RGBA (with optional opacity)
@function hex_to_rgba($hex, $opacity: 1) {
    $red: red($hex);
    $green: green($hex);
    $blue: blue($hex);

    @if ($opacity == 1) {
        @return rgb($red, $green, $blue);
    } @else {
        @return rgba($red, $green, $blue, $opacity);
    }

}

// square root function
@function sqrt($r) {
  $x0: 1;
  $x1: $x0;
 
  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }
 
  @return $x1;
}

@function list_contains($list,$var) {
    $contains: false;

    @each $item in $list { 
        @if $item == $var { 
            $contains: true; 

        } 
    }

    @return $contains;
}

// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold:  150 !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$gray-900: #212529 !default;
$white: #fff !default;
$yiq-text-dark:             $gray-900 !default;
$yiq-text-light:            $white !default;

// Color contrast
@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $dark;
  } @else {
    @return $light;
  }
}
